{"version":3,"sources":["goods_list.js"],"names":["$","QueryObj","query","cid","getUrl","pagenum","pagesize","init","mui","pullRefresh","container","down","auto","callback","goodsSearch","up","get","result","meta","status","data","goods","html","template","arr","endPulldownToRefresh","console","log","name","reg","RegExp","r","window","location","search","substr","match","decodeURI"],"mappings":";;AAAAA,CAAC,CAAC,YAAW;AACX;;;;;;;;;;AAWA;AACA,MAAIC,QAAQ,GAAG;AACb;AACAC,IAAAA,KAAK,EAAE,EAFM;AAGb;AACA;AACAC,IAAAA,GAAG,EAAEC,MAAM,CAAC,KAAD,CALE;AAMb;AACAC,IAAAA,OAAO,EAAE,CAPI;AAQb;AACAC,IAAAA,QAAQ,EAAE;AATG,GAAf;AAYAC,EAAAA,IAAI;;AACJ,WAASA,IAAT,GAAgB;AACd;AACAC,IAAAA,GAAG,CAACD,IAAJ,CAAS;AACPE,MAAAA,WAAW,EAAE;AACXC,QAAAA,SAAS,EAAE,WADA;AAEX;AACAC,QAAAA,IAAI,EAAE;AACJ;AACAC,UAAAA,IAAI,EAAE,IAFF;AAGJ;AACAC,UAAAA,QAAQ,EAAE,oBAAW;AACnB;AACAC,YAAAA,WAAW;AACZ;AAPG,SAHK;AAYX;AACAC,QAAAA,EAAE,EAAE;AACF;AACAF,UAAAA,QAAQ,EAAE,oBAAW,CAAE;AAFrB;AAbO;AADN,KAAT;AAoBD,GAhDU,CAkDX;;;AACA,WAASC,WAAT,GAAuB;AACrB;AACAd,IAAAA,CAAC,CAACgB,GAAF,CACE,oDADF,EAEEf,QAFF,EAGE,UAASgB,MAAT,EAAiB;AACf;AACA,UAAIA,MAAM,CAACC,IAAP,CAAYC,MAAZ,IAAsB,GAA1B,EAA+B;AAC7B;AACA;AACA,YAAIC,IAAI,GAAGH,MAAM,CAACG,IAAP,CAAYC,KAAvB,CAH6B,CAK7B;;AACA,YAAIC,IAAI,GAAGC,QAAQ,CAAC,SAAD,EAAY;AAAEC,UAAAA,GAAG,EAAEJ;AAAP,SAAZ,CAAnB;AACApB,QAAAA,CAAC,CAAC,OAAD,CAAD,CAAWsB,IAAX,CAAgBA,IAAhB,EAP6B,CAS7B;;AACAd,QAAAA,GAAG,CAAC,WAAD,CAAH,CACGC,WADH,GAEGgB,oBAFH;AAGD,OAbD,MAaO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBV,MAAlB;AACD;AACF,KArBH;AAuBD,GA5EU,CA8EX;;;AACA,WAASb,MAAT,CAAgBwB,IAAhB,EAAsB;AACpB,QAAIC,GAAG,GAAG,IAAIC,MAAJ,CAAW,UAAUF,IAAV,GAAiB,eAA5B,EAA6C,GAA7C,CAAV;AACA,QAAIG,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,MAAvB,CAA8B,CAA9B,EAAiCC,KAAjC,CAAuCP,GAAvC,CAAR;AACA,QAAIE,CAAC,IAAI,IAAT,EAAe,OAAOM,SAAS,CAACN,CAAC,CAAC,CAAD,CAAF,CAAhB;AACf,WAAO,IAAP;AACD;AACF,CArFA,CAAD","sourcesContent":["$(function() {\r\n  /* \r\n  1 获取发送到后台需要的 请求参数 \r\n  2 使用mui下拉上拉组件的步骤\r\n    1 看着文档来修改 标签结构\r\n    2 看着文档来修改 样式结构\r\n    3 js的初始化\r\n  3 什么时候发送ajax请求和什么时候 结束 下拉刷新组件\r\n    1 什么时候发送ajax请求 在mui的下拉刷新组件 启用的同时 \r\n    2 标签都生成 就可以 结束 下拉刷新组件\r\n   */\r\n\r\n  // 1 发送请求需要的参数对象 全局变量 方便修改\r\n  let QueryObj = {\r\n    // 查询的关键字 可以为空  根据 小米  华为 。。。。\r\n    query: \"\",\r\n    // 分类页面中的每一个小商品的分类id\r\n    // 获取 url上的参数 cid的值\r\n    cid: getUrl(\"cid\"),\r\n    // 页码\r\n    pagenum: 1,\r\n    // 页容量  一页可以存放几条数据\r\n    pagesize: 5\r\n  };\r\n\r\n  init();\r\n  function init() {\r\n    // 开始调用mui的下拉组件\r\n    mui.init({\r\n      pullRefresh: {\r\n        container: \".pyg_view\",\r\n        // 下拉刷新组件的配置\r\n        down: {\r\n          // 一打开页面的时候 自动显示 下拉刷新组件\r\n          auto: true,\r\n          //  触发下拉刷新时自动触发\r\n          callback: function() {\r\n            // 一旦看到下拉刷新组件 就表示 该代码也会一起被执行\r\n            goodsSearch();\r\n          }\r\n        },\r\n        // 上拉加载下一页的配置\r\n        up: {\r\n          //  触发上拉刷新时自动触发\r\n          callback: function() {}\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // 获取商品列表数据\r\n  function goodsSearch() {\r\n    // $.get(\"地址\",\"？参数对象\",成功的回调函数)\r\n    $.get(\r\n      \"http://api.pyg.ak48.xyz/api/public/v1/goods/search\",\r\n      QueryObj,\r\n      function(result) {\r\n        // 判断请求成功\r\n        if (result.meta.status == 200) {\r\n          // 成功\r\n          // 模板要渲染的数据\r\n          let data = result.data.goods;\r\n\r\n          // 生成标签\r\n          let html = template(\"mainTpl\", { arr: data });\r\n          $(\".list\").html(html);\r\n\r\n          // 结束下拉刷新\r\n          mui(\".pyg_view\")\r\n            .pullRefresh()\r\n            .endPulldownToRefresh();\r\n        } else {\r\n          console.log(\"失败\", result);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // 获取url上的参数 的值\r\n  function getUrl(name) {\r\n    var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\r\n    var r = window.location.search.substr(1).match(reg);\r\n    if (r != null) return decodeURI(r[2]);\r\n    return null;\r\n  }\r\n});\r\n"],"file":"goods_list.js"}