{"version":3,"sources":["category.js"],"names":["$","CateDatas","init","categories","get","result","meta","status","data","renderLeft","renderRight","console","log","leftHtml","i","length","tmpHtml","cat_name","html","index","item2Obj","rightData","children","rightHtml","template","arr"],"mappings":";;AAAAA,CAAC,CAAC,YAAW;AACX;;;;;;;;;AAUA;AACA,MAAIC,SAAJ;AAEAC,EAAAA,IAAI;;AACJ,WAASA,IAAT,GAAgB;AACdC,IAAAA,UAAU;AACX,GAjBU,CAmBX;;;AACA,WAASA,UAAT,GAAsB;AACpBH,IAAAA,CAAC,CAACI,GAAF,CAAM,kDAAN,EAA0D,UAAAC,MAAM,EAAI;AAClE;AACA,UAAIA,MAAM,CAACC,IAAP,CAAYC,MAAZ,IAAsB,GAA1B,EAA+B;AAC7B;AAEA;AACAN,QAAAA,SAAS,GAAGI,MAAM,CAACG,IAAnB,CAJ6B,CAM7B;;AACAC,QAAAA,UAAU,GAPmB,CAS7B;;AACAC,QAAAA,WAAW,CAAC,CAAD,CAAX;AACD,OAXD,MAWO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBP,MAAlB;AACD;AACF,KAhBD;AAiBD,GAtCU,CAwCX;;;AACA,WAASI,UAAT,GAAsB;AACpB;AACA,QAAII,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,SAAS,CAACc,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC;AAEA,UAAIE,OAAO,2CACYF,CAAC,IAAI,CAAL,GAAS,QAAT,GAAoB,EADhC,gBAETb,SAAS,CAACa,CAAD,CAAT,CAAaG,QAFJ,4BAAX;AAKAJ,MAAAA,QAAQ,IAAIG,OAAZ;AACD,KAZmB,CAcpB;;;AACAhB,IAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBkB,IAAhB,CAAqBL,QAArB;AACD,GAzDU,CA2DX;;;AACA,WAASH,WAAT,CAAqBS,KAArB,EAA4B;AAC1B;AACA,QAAIC,QAAQ,GAAGnB,SAAS,CAACkB,KAAD,CAAxB,CAF0B,CAG1B;;AACA,QAAIE,SAAS,GAAGD,QAAQ,CAACE,QAAzB,CAJ0B,CAK1B;;AAEA,QAAIC,SAAS,GAAGC,QAAQ,CAAC,UAAD,EAAa;AAAEC,MAAAA,GAAG,EAAEJ;AAAP,KAAb,CAAxB;AACArB,IAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBkB,IAAhB,CAAqBK,SAArB;AACD;AACF,CAtEA,CAAD","sourcesContent":["$(function() {\r\n  /* \r\n  1 实现了静态布局\r\n  2 动态渲染数据\r\n    1 左侧菜单是全部渲染 \r\n    2 右侧的内容 是 根据左侧 被选中的菜单 才开始 渲染 \r\n    3 写两个方法  (页面用到的数据 只要发送一次请求去获取 就可以提供给下次下次 使用 )\r\n      渲染左边（）\r\n      渲染右边（）\r\n   */\r\n\r\n  //  全局变量 存放 接口的返回数据 result.data\r\n  let CateDatas;\r\n\r\n  init();\r\n  function init() {\r\n    categories();\r\n  }\r\n\r\n  // 1 发请求获取数据\r\n  function categories() {\r\n    $.get(\"http://api.pyg.ak48.xyz/api/public/v1/categories\", result => {\r\n      // 判断请求是否成功\r\n      if (result.meta.status == 200) {\r\n        // 成功\r\n\r\n        // 获取要渲染左侧的数据\r\n        CateDatas = result.data;\r\n\r\n        // 渲染左边\r\n        renderLeft();\r\n\r\n        // 渲染右边\r\n        renderRight(0);\r\n      } else {\r\n        console.log(\"失败\", result);\r\n      }\r\n    });\r\n  }\r\n\r\n  // 2 渲染左边\r\n  function renderLeft() {\r\n    // 要拼接的左侧的html\r\n    let leftHtml = \"\";\r\n    for (let i = 0; i < CateDatas.length; i++) {\r\n      // let activeCls=i==0?\"active\":\"\";\r\n\r\n      let tmpHtml = `\r\n                <li class=\"${i == 0 ? \"active\" : \"\"}\">${\r\n        CateDatas[i].cat_name\r\n      }</li>\r\n                `;\r\n      leftHtml += tmpHtml;\r\n    }\r\n\r\n    // 把数据插入到 左侧容器中\r\n    $(\".left_menu\").html(leftHtml);\r\n  }\r\n\r\n  // 3 渲染右边\r\n  function renderRight(index) {\r\n    // 获取 大家电的数据\r\n    let item2Obj = CateDatas[index];\r\n    // 获取右侧内容 需要循环的数据\r\n    let rightData = item2Obj.children;\r\n    // console.log(rightData);\r\n\r\n    let rightHtml = template(\"rightTpl\", { arr: rightData });\r\n    $(\".right_box\").html(rightHtml);\r\n  }\r\n});\r\n"],"file":"category.js"}