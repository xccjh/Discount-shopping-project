{"version":3,"sources":["category.js"],"names":["$","CateDatas","init","renderDatas","eventList","on","addClass","siblings","removeClass","index","renderRight","sessStr","sessionStorage","getItem","categories","sessObj","JSON","parse","Date","now","time","console","log","data","renderLeft","get","result","meta","status","sessionObj","setItem","stringify","leftHtml","i","length","tmpHtml","cat_name","html","item2Obj","rightData","children","rightHtml","template","arr"],"mappings":"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","sourcesContent":["$(function() {\r\n  /* \r\n  1 实现了静态布局\r\n  2 首页动态渲染数据\r\n    1 左侧菜单是全部渲染 \r\n    2 右侧的内容 是 根据左侧 被选中的菜单 才开始 渲染 \r\n    3 写两个方法  (页面用到的数据 只要发送一次请求去获取 就可以提供给下次下次 使用 )\r\n      渲染左边（）\r\n      渲染右边（）\r\n  3 点击左侧菜单\r\n    1 左侧菜单被 激活选中\r\n    2 右侧的内容 动态跟着渲染\r\n      1 先获取 被点击的li标签的索引\r\n\r\n  4 实现分类页面缓存的功能   过期时间\r\n    1 通俗的缓存的实现 \r\n      在发送请求的之前 先判断 \r\n        本地存储中有没有 接口数据 \r\n        有 = 先判断数据有没有过期  没有过期 再使用 缓存 数据过期 也是 要发送请求去获取新的数据\r\n        没有 再发送请求去获取数据\r\n    2 技术难点\r\n      1 用那个本地存储 永久  会话 ？\r\n      2 看需求而定 都行！！！！  会话 就是使用它  为什么 心情好！！！\r\n      3 本地存储 存的数据类型 比如 简单类似 数字 或者 对象 有坑吗？ 本地存储在存数据进去之后 都会把数据转成 字符串类型\r\n          对象类型 直接转成字符串 会导致  数据丢失  先把数据 转成 json字符串 再存入 获取之后 使用之前 json 解析\r\n    3 代码的逻辑  key:cates\r\n      1 先发送请求 获取 数据 再存进去 \r\n      2 在发送请求之前 先获取一下 会话存储中的数据 \r\n   */\r\n\r\n  //  全局变量 存放 接口的返回数据 result.data\r\n  let CateDatas;\r\n\r\n  init();\r\n  function init() {\r\n    renderDatas();\r\n    eventList();\r\n  }\r\n\r\n  // 负责 绑定 页面当中的 一坨事件\r\n  function eventList() {  \r\n    // 1 左侧菜单的点击事件  委托 委派\r\n    // touchstart 原生的触屏事件  \r\n\r\n    $(\".left_menu \").on(\"tap\",\"li\",function () {\r\n      \r\n      $(this).addClass(\"active\").siblings().removeClass(\"active\");\r\n\r\n      // 获取 被点击的li标签的索引 $(this).index()\r\n      let index=$(this).index();\r\n      renderRight(index);\r\n      \r\n    })\r\n  }\r\n\r\n  // 0 渲染数据 数据来源 一处是发送ajax获取 一处是 从本地存储中获取\r\n  function renderDatas() {\r\n    // 1 先获取会话存储中的数据  null  有数据的时候 字符串类型\r\n    let sessStr=sessionStorage.getItem(\"cates\");\r\n    // 2 判断有没有数据\r\n    if(!sessStr){\r\n      // 没有数据  发送请求来获取新数据\r\n      categories();\r\n    }else{\r\n      // console.log(\"有数据 准备使用缓存数据\");\r\n      // 把缓存数据 重新解析成 对象格式\r\n      let sessObj=JSON.parse(sessStr);\r\n      // 有数据 先判断一下 数据是否过期 已经过期了 又发送请求去获取   过期时间 60s\r\n      if(Date.now()-sessObj.time>60000){\r\n        // 过期\r\n        console.log(\"数据过期了 需要重新发送请求获取数据\");\r\n        categories();\r\n      }else{\r\n        console.log(\"数据未过期 可以使用 渲染数据\");\r\n\r\n        // 获取旧的要渲染的数据\r\n         CateDatas=sessObj.data;\r\n\r\n        // 渲染左边\r\n        renderLeft();\r\n        // 渲染右边\r\n        renderRight(0);\r\n      }\r\n    }\r\n\r\n  }\r\n  // 1 发请求获取数据\r\n  function categories() {\r\n    $.get(\"http://api.pyg.ak48.xyz/api/public/v1/categories\", result => {\r\n      // 判断请求是否成功\r\n      if (result.meta.status == 200) {\r\n        // 成功\r\n\r\n        // 获取要渲染左侧的数据\r\n        CateDatas = result.data;\r\n\r\n        // 存入 接口的数据  CateDatas=[]   {data:CateDatas,time:当前的时间} \r\n        // 把对象先转成  json 对象\r\n        let sessionObj={data:CateDatas,time:Date.now()};\r\n\r\n        sessionStorage.setItem(\"cates\",JSON.stringify(sessionObj));\r\n\r\n        // 渲染左边\r\n        renderLeft();\r\n\r\n        // 渲染右边\r\n        renderRight(0);\r\n      } else {\r\n        console.log(\"失败\", result);\r\n      }\r\n    });\r\n  }\r\n\r\n  // 2 渲染左边\r\n  function renderLeft() {\r\n    // 要拼接的左侧的html\r\n    let leftHtml = \"\";\r\n    for (let i = 0; i < CateDatas.length; i++) {\r\n      // let activeCls=i==0?\"active\":\"\";\r\n\r\n      let tmpHtml = `\r\n                <li class=\"${i == 0 ? \"active\" : \"\"}\">${\r\n        CateDatas[i].cat_name\r\n      }</li>\r\n                `;\r\n      leftHtml += tmpHtml;\r\n    }\r\n\r\n    // 把数据插入到 左侧容器中\r\n    $(\".left_menu\").html(leftHtml);\r\n  }\r\n\r\n  // 3 渲染右边\r\n  function renderRight(index) {\r\n    // 获取 大家电的数据\r\n    let item2Obj = CateDatas[index];\r\n    // 获取右侧内容 需要循环的数据\r\n    let rightData = item2Obj.children;\r\n    // console.log(rightData);\r\n\r\n    let rightHtml = template(\"rightTpl\", { arr: rightData });\r\n    $(\".right_box\").html(rightHtml);\r\n  }\r\n});\r\n"],"file":"category.js"}