{"version":3,"sources":["cart.js"],"names":["$","init","cartAll","eventList","on","additionAll","toggleClass","hasClass","text","editCart","deleteCart","token","JSON","parse","sessionStorage","getItem","ajax","url","headers","Authorization","success","result","meta","status","cart_info","data","html","template","goodsObj","mui","numbox","console","log","$lis","total","i","length","li","tmpObj","tmpPrice","goods_price","tmp_num","find","val","toast","paramsObj","amount","goods_id","type","infos","stringify","parents","$unLis","not"],"mappings":"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","sourcesContent":["$(function() {\r\n  /* \r\n  1 任何人都可以访问这个购物车页面吗   登录过后的用户 才可以访问\r\n    1 判断 本地存储中有没有  userinfo 这个数据  有 登录过\r\n      假如 没有数据 \r\n        1 把当前的页面路径存入到 本地存储中 pageurl\r\n        2 跳转到登录页面\r\n  2 发送请求渲染数据 私人的数据  token  请求头 \r\n    1 token  本地存储 复杂类型\r\n    2 对象也是可以循环\r\n\r\n  3 计算总价 \r\n    1 页面打开的时候就计算总价格\r\n    2 点击数字输入框的时候 也是需要计算总价\r\n      1 绑定点击事件\r\n      2 点击触发 再调用 刚才 计算总价的方法\r\n  4 页面状态的改变\r\n    0 想 通过给body标签添加一个class 来控制 下面的标签的显示和隐藏   $(\"body\").toggleClass(\"edit_status\");\r\n      1 当body标签 没有 class  \"edit_status\"  以下标签就隐藏\r\n      2 当body标签 有 class  “edit_status”   以下标签就显示\r\n    1 一开始 复选框。数字输入框，删除按钮 都是隐藏\r\n    2 点击 编辑按钮的时候 以上的标签 反复切换 显示 \r\n  5 编辑购物车功能 \r\n    0 判断购物车有没有数据\r\n    1 明确 我们可以编辑的只有 购买的数量而已 \r\n    2 分析 接口的数据  发送到后台的数据  格式 是和 获取购物车的数据 的格式 完全一样！！！\r\n        但是 需要修改一个属性 amount ==  购买的数量\r\n    3 构造数据的逻辑\r\n      1 获取到所有的li标签\r\n      2 获取到所有的li标签身上的 商品对象\r\n      3 把获取到的商品的对象中的字段 amount 动态做改变 变成 数字输入框的值\r\n      4 把每一个商品对象 拼接成一个大对象 \r\n    4 发送请求 完成编辑 \r\n      1 post 需要带上参数  请求头\r\n      2 成功之后\r\n        1 弹出 同步成功的 提示\r\n        2 js 刷新一下数据 再调用一次  cartAll\r\n   6 删除功能 和编辑功能一样 都是使用 同步接口 \r\n    0 判断购物车有没有选中要删除的商品\r\n    1 分析 接口的数据  把 要删除的数据  不要发送到后台去！！！\r\n    2 把 未被复选框选中的数据 发送到后台去 该格式 和 编辑的时候的格式一致！！！\r\n    3 绑定 删除 按钮的点击事件\r\n      1 获取 未被选中的 li标签\r\n      2 循环\r\n      3 获取到 li标签的 身上 商品对象\r\n      4 把商品对象的 购买数量 又 修改成 数字输入框里面的值\r\n      5 拼接成给一个 大 对象\r\n      6 发送请求 完成同步\r\n    7 编辑和删除功能\r\n      1 只有 要操作的数据 li标签不一样  \r\n      2 剩下的逻辑 完全一样！！！！\r\n   */\r\n  init();\r\n  function init() {\r\n    cartAll();\r\n    eventList();\r\n  }\r\n  function eventList() {\r\n    // 绑定 数字输入框的编辑按钮点击 事件  +  -\r\n    $(\".order_list\").on(\"tap\", \" li .goods_num_tool button\", function() {\r\n      // console.log(\"被点击了\");\r\n      // 调用计算总价格的方法\r\n      additionAll();\r\n    });\r\n\r\n    // 绑定 编辑按钮 点击事件\r\n    $(\".edit_btn\").on(\"tap\", function() {\r\n      // console.log(\"编辑\");\r\n\r\n      // 切换 添加 class\r\n      $(\"body\").toggleClass(\"edit_status\");\r\n\r\n      // 判断 如果 body上 有  edit_status 按钮的文本就变成 “完成”\r\n      // 否则 就是编辑\r\n      if ($(\"body\").hasClass(\"edit_status\")) {\r\n        $(this).text(\"完成\");\r\n      } else {\r\n        $(this).text(\"编辑\");\r\n        // 开始同步 数据\r\n        editCart();\r\n      }\r\n    });\r\n\r\n    // 删除按钮\r\n    $(\".delete_btn \").on(\"tap\",function () {\r\n      deleteCart();\r\n      \r\n    })\r\n  }\r\n\r\n  // 获取购物车数据\r\n  function cartAll() {\r\n    // let obj={ name:\"猪八戒\", skill:\"卖队友\" };\r\n    // // es5\r\n    // // let name=obj.name;\r\n    // // let skill=obj.skill;\r\n    // // es6  解构的语法\r\n    // let {name,skill}=obj;\r\n    // console.log(name,skill);\r\n\r\n    // 2.1 获取本地存储中的token 字段\r\n    let token = JSON.parse(sessionStorage.getItem(\"userinfo\")).token;\r\n    // es6  解构 node js es 6  解构 知识点\r\n    // let {token}=JSON.parse(sessionStorage.getItem(\"userinfo\"));\r\n\r\n    // $.get 没有办法 设置请求头\r\n    $.ajax({\r\n      url: \"http://api.pyg.ak48.xyz/api/public/v1/my/cart/all\",\r\n      // type:\"get\"\r\n      // data:{}\r\n      headers: {\r\n        Authorization: token\r\n      },\r\n      success: function(result) {\r\n        // console.log(result);\r\n        if (result.meta.status == 200) {\r\n          // 以前循环的数据都是数组 但是现在 是对象\r\n          // 数组可以循环 对象可以循环\r\n          // 要传递给模板引擎的数据\r\n          let cart_info = JSON.parse(result.data.cart_info);\r\n          // console.log(cart_info);\r\n          let html = template(\"mainTpl\", { goodsObj: cart_info });\r\n          $(\".order_list\").html(html);\r\n\r\n          // 数字输入框的初始化\r\n          mui(\".mui-numbox\").numbox();\r\n\r\n          // 计算总价格\r\n          additionAll();\r\n        } else {\r\n          console.log(\"失败\", result);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // 计算购物车总价格\r\n  function additionAll() {\r\n    /* \r\n    0 把每一种 商品的信息 提前放入到 li标签的自定义属性中，方便后期的获取 \r\n      修改一下 模板引擎的代码 \r\n    1 获取 所有的li标签 里面   商品信息对象\r\n    2 对li标签的商品信息对象数组 进行循环\r\n    3 在循环中\r\n      1 每一种商品的单价 * 该商品的数量(数字输入框里面的值)\r\n      2 需要叠加之后的总价格 渲染到页面的对应的标签上 \r\n     */\r\n\r\n    //  1 获取所有的li标签 $lis是一个jq对象\r\n    let $lis = $(\".order_list li\");\r\n    // console.log($lis);\r\n\r\n    // 定义总价\r\n    let total = 0;\r\n    // 2 进行循环\r\n    for (let i = 0; i < $lis.length; i++) {\r\n      // 3.1 获取到每一个 li标签的dom对象  js 原生的dom对象\r\n      let li = $lis[i];\r\n      // 3.2 获取li标签身上的 商品信息对象   如何通过原生的js 获取 标签上的 data- 属性的值   dom.dataset.属性名\r\n      // <li data-obj=\"1233\"></li >\r\n      let tmpObj = $(li).data(\"obj\");\r\n      // 获取该商品的单价\r\n      let tmpPrice = tmpObj.goods_price;\r\n      // 获取要购买的商品的数量\r\n      let tmp_num = $(li)\r\n        .find(\".mui-numbox-input\")\r\n        .val();\r\n\r\n      total += tmpPrice * tmp_num;\r\n    }\r\n    // 把总价格 赋值到对应的标签上\r\n    // console.log(total);\r\n    $(\".total_price\").text(total);\r\n  }\r\n\r\n  // 编辑购物车\r\n  function editCart() {\r\n\r\n\r\n    // 5.3.1 获取所有的li标签\r\n    let $lis = $(\".order_list li\");\r\n\r\n    // 就判断li标签的数组的长度 等于0 表示 用户还没有购买商品 肯定不让编辑\r\n    if($lis.length==0){\r\n      mui.toast(\"您还没有选购商品\");\r\n      return;\r\n    }\r\n\r\n    // 需要发送到后台的 对象\r\n    let paramsObj = {};\r\n    // 5.3.2 先循环\r\n    for (let i = 0; i < $lis.length; i++) {\r\n      // 获取到单个的li标签 dom原生\r\n      let li = $lis[i];\r\n      //  获取li标签身上的 商品对象 以前存放好的\r\n      let tmpObj = $(li).data(\"obj\");\r\n      // 把最新的购买的数量 赋值到 tmpObj上\r\n      tmpObj.amount = $(li)\r\n        .find(\".mui-numbox-input\")\r\n        .val();\r\n      // 给大的对象 赋值\r\n      paramsObj[tmpObj.goods_id] = tmpObj;\r\n    }\r\n    // 5.4 准备发送请求到后台 进行 编辑购物车\r\n    let token = JSON.parse(sessionStorage.getItem(\"userinfo\")).token;\r\n    $.ajax({\r\n      url:\"http://api.pyg.ak48.xyz/api/public/v1/my/cart/sync\",\r\n      type:\"post\",\r\n      data:{\r\n        infos:JSON.stringify(paramsObj)\r\n      },\r\n      headers:{\r\n        Authorization: token\r\n      },\r\n      success:function (result) {\r\n        // console.log(result);\r\n        if(result.meta.status==200){\r\n          // 成功\r\n          mui.toast(\"同步成功\");\r\n          cartAll();\r\n        }else{\r\n          console.log(\"失败\",result);\r\n        }\r\n        \r\n      }\r\n    })\r\n  }\r\n\r\n  // 删除购物车\r\n  function deleteCart() {\r\n    // 0 获取被选中的li标签\r\n    let $lis=$(\".order_list .ol_chk:checked\").parents(\"li\");\r\n    if($lis.length==0){\r\n      mui.toast(\"您还没有选中要删除的商品\");\r\n      return;\r\n    }\r\n    // // console.log($lis);\r\n    // 1 获取未被选中的li标签\r\n    let $unLis=$(\".order_list .ol_chk\").not(\":checked\").parents(\"li\");\r\n\r\n\r\n     // 需要发送到后台的 对象\r\n     let paramsObj = {};\r\n     // 5.3.2 先循环\r\n     for (let i = 0; i <$unLis.length; i++) {\r\n       // 获取到单个的li标签 dom原生\r\n       let li = $unLis[i];\r\n       //  获取li标签身上的 商品对象 以前存放好的\r\n       let tmpObj = $(li).data(\"obj\");\r\n       // 把最新的购买的数量 赋值到 tmpObj上\r\n       tmpObj.amount = $(li)\r\n         .find(\".mui-numbox-input\")\r\n         .val();\r\n       // 给大的对象 赋值\r\n       paramsObj[tmpObj.goods_id] = tmpObj;\r\n     }\r\n     // 5.4 准备发送请求到后台 进行 编辑购物车\r\n     let token = JSON.parse(sessionStorage.getItem(\"userinfo\")).token;\r\n     $.ajax({\r\n       url:\"http://api.pyg.ak48.xyz/api/public/v1/my/cart/sync\",\r\n       type:\"post\",\r\n       data:{\r\n         infos:JSON.stringify(paramsObj)\r\n       },\r\n       headers:{\r\n         Authorization: token\r\n       },\r\n       success:function (result) {\r\n         // console.log(result);\r\n         if(result.meta.status==200){\r\n           // 成功\r\n           mui.toast(\"同步成功\");\r\n           cartAll();\r\n         }else{\r\n           console.log(\"失败\",result);\r\n         }\r\n         \r\n       }\r\n     })\r\n  }\r\n});\r\n"],"file":"cart.js"}